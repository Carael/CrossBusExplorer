@using CrossBusExplorer.Management
@using CrossBusExplorer.Management.Contracts
@using CrossBusExplorer.ServiceBus.Contracts
@using CrossBusExplorer.Website.Models
@using System.Security.Cryptography
@using System.Net
@using System.Web
<MudNavMenu>
    <MudNavLink Match="NavLinkMatch.All"
                Href="connections"
                Icon="@Icons.Material.Filled.EditNote">
        Manage connections
    </MudNavLink>
    <MudNavLink Disabled="@Model.IsLoading()" Icon="@Icons.Material.Filled.Refresh" OnClick="@(() => Model.ReloadMenu())">
        Reload menu
    </MudNavLink>

    @foreach (var folder in Model.Folders)
    {
        if (string.IsNullOrEmpty(folder.Name))
        {
            foreach (var menuItem in folder.MenuItems)
            {
                <MenuItem Value="@menuItem"></MenuItem>
            }
        }
        else
        {
            <MudNavGroup Title=@(folder.Name)
                         Icon="@Icons.Material.Filled.FolderShared">
                @foreach (var menuItem in folder.MenuItems)
                {
                    <MenuItem Value="@menuItem"></MenuItem>
                }
            </MudNavGroup>
        }
    }
</MudNavMenu>

@code {
    [Inject]
    private INavigationViewModel Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model.PropertyChanged += (_, _) =>
        {
            StateHasChanged();
        };
    }
}