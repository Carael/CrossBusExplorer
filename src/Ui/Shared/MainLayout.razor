@inherits LayoutComponentBase

@inject NavigationManager NavigationService
@inject IJSRuntime JsRuntime

<MBDrawer @ref="@Drawer"
          StartOpen="true"
          IsDismissible="true">

    <nav class="mdc-list">
        <!-- -->
        <MBListItem LeadingIcon="device_hub" Label="Connections" @onclick="@(() => ListItemClickHandler("connections"))"/>
        <!-- List of existing saved connections -->
        <MBListItem LeadingIcon="home" Label="About" @onclick="@(() => ListItemClickHandler("about"))"/>
    </nav>
</MBDrawer>

<div class="mdc-drawer-app-content">
    <MBTopAppBar Title="CrossBusExplorer"
                 @onclick="@SideBarToggle"
                 NavIcon="menu"
                 ScrollTarget="#main-content"
                 TopAppBarType="@MBTopAppBarType.Fixed"
                 class="app-bar mdc-top-app-bar--short-has-action-item mdc-elevation--z5">
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-end" role="toolbar">
            <MBIconButton @onclick="@OpenMenuAsync" Icon="more_vert"/>
            <div class="mdc-menu-surface--anchor">
                <MBMenu @ref="Menu">
                    <MBMenuSelectionGroup @key="@Theme">
                        <MBListItem Label="Material Default Theme" LeadingIcon="done" IsSelectedMenuItem="@(Theme == "material-default-theme")" @onclick="@(() => ThemeSetterAsync("material-default-theme"))"/>
                        <MBListItem Label="Light Square Theme" LeadingIcon="done" IsSelectedMenuItem="@(Theme == "light-square-theme")" @onclick="@(() => ThemeSetterAsync("light-square-theme"))"/>
                        <MBListItem Label="Dark Square Theme" LeadingIcon="done" IsSelectedMenuItem="@(Theme == "dark-square-theme")" @onclick="@(() => ThemeSetterAsync("dark-square-theme"))"/>
                        <MBListItem Label="Rounded Theme" LeadingIcon="done" IsSelectedMenuItem="@(Theme == "rounded-theme")" @onclick="@(() => ThemeSetterAsync("rounded-theme"))"/>
                        <MBListItem Label="Asymmetric Theme" LeadingIcon="done" IsSelectedMenuItem="@(Theme == "asymmetric-theme")" @onclick="@(() => ThemeSetterAsync("asymmetric-theme"))"/>
                    </MBMenuSelectionGroup>
                </MBMenu>
            </div>
        </section>
    </MBTopAppBar>

    <MBBladeSet MainContentAdditionalCss="demo-blade-main-content"
                BladesAdditionalCss="mdc-elevation--z3">
        <PageContent>
            <main class="main-content" id="main-content">
                <div class="max-width-content">
                    <CascadingValue Name="MaterialDocRef" Value="@materialDocRef" IsFixed="true">
                        <div class="mdc-top-app-bar--dense-fixed-adjust">
                            <div class="mdc-layout-grid">
                                <div class="mdc-layout-grid__inner">
                                    @Body
                                </div>
                            </div>
                        </div>
                    </CascadingValue>
                </div>
            </main>
        </PageContent>
    </MBBladeSet>
</div>


@code {
        private const string materialDocRef = "https://github.com/material-components/material-components-web/tree/master/packages/";

    private MBDrawer Drawer { get; set; }

    private MBMenu Menu { get; set; }

    private string Theme { get; set; } = "material-default-theme";

    private async Task OpenMenuAsync()
    {
        await Menu.ToggleAsync();
    }

    protected async Task ThemeSetterAsync(string theme)
    {
        await JsRuntime.InvokeAsync<object>("ui.themeSetter.setTheme", theme, true);
        Theme = theme;
        StateHasChanged();
    }


    private void ListItemClickHandler(string NavigationReference)
    {
        Drawer.NotifyNavigation();
        NavigationService.NavigateTo(NavigationReference);
    }

    private void SideBarToggle()
    {
        Drawer.Toggle();
    }
}