name: Build Maui project

on:
  push:
    tags:
    - '*'
    paths:
      - 'src/**/*'
      - '.github/workflows/dotnet-maui.yml' 
env:
  PROJECT_PATH: "src/Ui/Host.Ui/Host.Ui.csproj"
  NUGETCONFIG_PATH: "nuget.config"
  RELEASE_VERSION: ${{ github.ref_name }}
  
jobs:
# ***************************** #
# >>>>>>> Android build <<<<<<< #
# ***************************** #
#   maui-android:
#     runs-on: windows-2022
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         fetch-depth: 0

#     - name: Setup .NET Core SDK
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: '6.0.x'
#         include-prerelease: true

#     - uses: actions/setup-java@v2
#       with:
#         distribution: 'microsoft'
#         java-version: '11'

#     - name: Generate version number using date and run number
#       shell: pwsh
#       id: version-creator
#       run: |
#         $buildDay = Get-Date -Format "yyyy.Mdd"
#         $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
#         echo "::set-output name=APP_VERSION::$ver"
#     - name: Install MAUI workloads (required for GitHub-hosted runners)
#       shell: pwsh
#       run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

#     - name: Restore NuGet packages
#       shell: pwsh
#       run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}

#     - name: Build Maui Android project
#       shell: pwsh
#       run: dotnet build ${{ env.PROJECT_PATH }} -c Debug -f net6.0-android --no-restore


# ***************************** #
# >>>>>>> Windows Build <<<<<<< #
# ***************************** #
  # maui-windows:
  #   runs-on: windows-2022
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0

  #   - name: Setup .NET Core SDK
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: '7.0.x'
  #       include-prerelease: true

  #   # For WinUI builds
  #   - name: Add msbuild to PATH
  #     uses: microsoft/setup-msbuild@v1.1

  #   - name: Generate version number using date and run number
  #     shell: pwsh
  #     id: version-creator
  #     run: |
  #       $buildDay = Get-Date -Format "yyyy.Mdd"
  #       $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
  #       echo "::set-output name=APP_VERSION::$ver"
  #   - name: Install MAUI workloads (required for GitHub-hosted runners)
  #     shell: pwsh
  #     run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

  #   - name: Restore NuGet packages
  #     shell: pwsh
  #     run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}

  #   - name: Build Maui WinUI project
  #     shell: pwsh
  #     run: |
  #       dotnet build ${{ env.PROJECT_PATH }} -c Debug -f net7.0-windows10.0.19041.0
    
  #   - name: Publish Maui WinUI project
  #     shell: pwsh
  #     run: |
  #       dotnet publish ${{ env.PROJECT_PATH }} -f net7.0-windows10.0.19041.0 -c Release /p:RuntimeIdentifierOverride=win10-x64

  #   - name: Upload Windows Artifact
  #     uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
  #     with:
  #         name: crossbusexplorer-windows
  #         path: src/Ui/Host.Ui/bin/Release//net7.0-windows10.0.19041.0/win10-x64/AppPackages/MauiBeach*/Cross*.msix

# ************************* #
# >>>>>>> iOS Build <<<<<<< #
# ************************* #
#   maui-ios:
#     runs-on: macos-12
#     env:
#       DOTNET_NOLOGO: true
#       DOTNET_CLI_TELEMETRY_OPTOUT: true
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         fetch-depth: 0

#     #- uses: maxim-lobanov/setup-xcode@v1
#     #  with:
#     #    xcode-version: latest

#     - name: Setup .NET Core SDK
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: '6.0.x'
#         include-prerelease: true

#     - name: Generate version number using date and run number
#       id: version-creator
#       shell: bash
#       run: |
#         buildDay=`date +%Y.%m%d`
#         echo $buildDay
#         runNum=${{ env.GITHUB_RUN_NUMBER }}
#         ver="${buildDay}.${runNum}.0"
#         echo $ver
#         echo "APP_VERSION=$ver" >> $GITHUB_ENV
#     - name: Install MAUI workloads (required for GitHub-hosted runners)
#       shell: pwsh
#       run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

#     - name: Restore NuGet packages
#       shell: bash
#       run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}

#     - name: Build MAUI iOS project
#       shell: bash
#       run: dotnet build ${{ env.PROJECT_PATH }} -c Debug -f net6.0-ios --no-restore


# ********************************* #
# >>>>>>> MacCatalyst Build <<<<<<< #
# ********************************* #
  maui-macos:
    runs-on: macos-12
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    #- uses: maxim-lobanov/setup-xcode@v1
    #  with:
    #    xcode-version: latest

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true

    - name: Generate version number using date and run number
      id: version-creator
      shell: bash
      run: |
        buildDay=`date +%Y.%m%d`
        echo $buildDay
        runNum=${{ env.GITHUB_RUN_NUMBER }}
        ver="${buildDay}.${runNum}.0"
        echo $ver
        echo "APP_VERSION=$ver" >> $GITHUB_ENV
    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: bash
      run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}
         
    - name: Publish MAUI MacCatalyst project
      shell: bash
      run: dotnet build ${{ env.PROJECT_PATH }} -f:net7.0-maccatalyst -c:Release /p:CreatePackage=true
    - name: Upload MacCatalyst Artifact
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
          name: crossbusexplorer-macos
          path: src/Ui/Host.Ui/bin/Release/net7.0-maccatalyst/maccatalyst-x64/*.pkg
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: Upload osx-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: src/Ui/Host.Ui/bin/Release/net7.0-maccatalyst/maccatalyst-x64/*.pkg
        asset_name: CrossBusExplorer_osx-x64.pkg
        asset_content_type: application/package