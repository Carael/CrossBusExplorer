name: Build Maui project

on:
  push:
    tags:
    - '*'
    paths:
      - 'src/**/*'
      - '.github/workflows/dotnet-maui.yml' 
env:
  PROJECT_PATH: "src/Ui/Host.Ui/Host.Ui.csproj"
  NUGETCONFIG_PATH: "nuget.config"
  RELEASE_VERSION: ${{ github.ref_name }}
  
jobs:
# ***************************** #
# >>>>>>> Windows Build <<<<<<< #
# ***************************** #
  publish-windows:
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true

    # For WinUI builds
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Generate version number using date and run number
      shell: pwsh
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
        echo "::set-output name=APP_VERSION::$ver"

    - name: Decrypt PFX file
      run: |
        echo "${{ secrets.WINDOWS_PFX_FILE }}" > cert.pfx.asc
        certutil -decode cert.pfx.asc cert.pfx

    - name: Add Cert to Store
      run: |
        certutil -user -q -p ${{ secrets.WINDOWS_PFX_PASSWORD }} -importpfx cert.pfx NoRoot

    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: pwsh
      run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}
    
    - name: Publish Maui WinUI project x64
      shell: pwsh
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} -f net7.0-windows10.0.19041.0 -c Release /p:RuntimeIdentifierOverride=win10-x64 /p:WindowsPackageType=None

    - name: Publish Maui WinUI project arm64
      shell: pwsh
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} -f net7.0-windows10.0.19041.0 -c Release /p:RuntimeIdentifierOverride=win10-arm64 /p:WindowsPackageType=None

    - name: Upload Windows Artifact x64
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
          name: crossbusexplorer-win-x64
          path: src/Ui/Host.Ui/bin/Release/net7.0-windows10.0.19041.0/win10-x64/AppPackages/Host.Ui*/Host.Ui*.msix

    - name: Upload Windows Artifact arm64
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
          name: crossbusexplorer-win-arm64
          path: src/Ui/Host.Ui/bin/Release/net7.0-windows10.0.19041.0/win10-arm64/AppPackages/Host.Ui*/Host.Ui*.msix

# ********************************* #
# >>>>>>> MacCatalyst Build <<<<<<< #
# ********************************* #
  publish-macos:
    runs-on: macos-12
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    #- uses: maxim-lobanov/setup-xcode@v1
    #  with:
    #    xcode-version: latest

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true

    - name: Generate version number using date and run number
      id: version-creator
      shell: bash
      run: |
        buildDay=`date +%Y.%m%d`
        echo $buildDay
        runNum=${{ env.GITHUB_RUN_NUMBER }}
        ver="${buildDay}.${runNum}.0"
        echo $ver
        echo "APP_VERSION=$ver" >> $GITHUB_ENV
    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      shell: bash
      run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}
         
    - name: Publish MAUI MacCatalyst project
      shell: bash
      run: dotnet build ${{ env.PROJECT_PATH }} -f:net7.0-maccatalyst -c:Release /p:CreatePackage=true
    - name: Upload MacCatalyst Artifact
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
          name: crossbusexplorer-macos-x64
          path: src/Ui/Host.Ui/bin/Release/net7.0-maccatalyst/maccatalyst-x64/*.pkg

# ********************************* #
# >>>>>>> Release <<<<<<< #
# ********************************* #
  create-release:
    needs: [publish-windows, publish-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Create downloads folder
      run: mkdir downloads
    - name: Download macos-x64 build artifact
      uses: actions/download-artifact@v3.0.1
      with:
        name: crossbusexplorer-macos-x64
        path: downloads/crossbusexplorer-macos-x64
    - name: Zip macos-x64
      run: (cd downloads/crossbusexplorer-macos-x64 ; zip -r crossbusexplorer-macos-x64 *)

    - name: Download windows-x64 build artifact
      uses: actions/download-artifact@v3.0.1
      with:
        name: crossbusexplorer-win-x64
        path: downloads/crossbusexplorer-win-x64
    - name: Zip win-x64
      run: (cd downloads/crossbusexplorer-win-x64 ; zip -r crossbusexplorer-win-x64 *)

    - name: Download windows-arm64 build artifact
      uses: actions/download-artifact@v3.0.1
      with:
        name: crossbusexplorer-win-arm64
        path: downloads/crossbusexplorer-win-arm64
    - name: Zip win-arm64
      run: (cd downloads/crossbusexplorer-win-arm64 ; zip -r crossbusexplorer-win-arm64 *)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: Upload osx-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-macos-x64/crossbusexplorer-macos-x64.zip
        asset_name: crossbusexplorer-macos-x64.zip
        asset_content_type: application/zip
    - name: Upload win-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-win-x64/crossbusexplorer-win-x64.zip
        asset_name: crossbusexplorer-win-x64.zip
        asset_content_type: application/zip
    - name: Upload win-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-win-arm64/crossbusexplorer-win-arm64.zip
        asset_name: crossbusexplorer-win-arm64.zip
        asset_content_type: application/zip
