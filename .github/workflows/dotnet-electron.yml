name: Build Maui project

on:
  push:
    tags:
    - '*'
    paths:
      - 'src/**/*'
      - '.github/workflows/dotnet-eletron.yml' 
env:
  PROJECT_PATH: "src/Ui/Website.Host/Website.Host.csproj"
  PROJECT_FOLDER: "src/Ui/Website.Host/"
  NUGETCONFIG_PATH: "nuget.config"
  RELEASE_VERSION: ${{ github.ref_name }}
  
jobs:
  publish:
    runs-on: macos-12
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true

    - name: Generate version number using date and run number
      id: version-creator
      shell: bash
      run: |
        buildDay=`date +%Y.%m%d`
        echo $buildDay
        runNum=${{ env.GITHUB_RUN_NUMBER }}
        ver="${buildDay}.${runNum}.0"
        echo $ver
        echo "APP_VERSION=$ver" >> $GITHUB_ENV

    - name: Install h5.ElectronNET.CLI
      shell: bash
      run: dotnet tool install h5.ElectronNET.CLI -g

    - name: Restore NuGet packages
      shell: bash
      run: dotnet restore ${{ env.PROJECT_PATH }} --configfile ${{ env.NUGETCONFIG_PATH }}
         
    - name: Publish Win
      shell: bash
      run: electronize-h5 build /target win

    - name: Publish Linux
      shell: bash
      run: electronize-h5 build /target linux

    - name: Publish Osx
      shell: bash
      run: electronize-h5 build /target osx

    - name: Publish Osx
      shell: bash
      run: electronize-h5 build /target osx-arm64

    - name: Upload publish artifacts
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
          name: crossbusexplorer-electron
          path: ${{ env.PROJECT_FOLDER }}/bin/Desktop/*.*

# ********************************* #
# >>>>>>> Release <<<<<<< #
# ********************************* #
  create-release:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
    - name: Create downloads folder
      run: mkdir downloads
    - name: Download artifacts
      uses: actions/download-artifact@v3.0.1
      with:
        name: crossbusexplorer-electron
        path: downloads/crossbusexplorer-electron
    - name: Zip win
      run: (cd downloads/crossbusexplorer-electron ; zip -r crossbusexplorer-win-x64 *.exe)

    - name: Zip linux AppImage
      run: (cd downloads/crossbusexplorer-electron ; zip -r crossbusexplorer-linux-appimage-x64 *.AppImage)

    - name: Zip linux snap
      run: (cd downloads/crossbusexplorer-electron ; zip -r crossbusexplorer-linux-snap-x64 *.snap)

    - name: Zip macos
      run: (cd downloads/crossbusexplorer-electron ; zip -r crossbusexplorer-macos *.dmg)

    - name: Zip macos-arm64
      run: (cd downloads/crossbusexplorer-electron ; zip -r crossbusexplorer-macos-arm64 *arm64.dmg)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: Upload macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-electron/crossbusexplorer-macos.zip
        asset_name: crossbusexplorer-macos.zip
        asset_content_type: application/zip
    - name: Upload macos-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-electron/crossbusexplorer-macos-arm64.zip
        asset_name: crossbusexplorer-macos-arm64.zip
        asset_content_type: application/zip
        
    - name: Upload win-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-electron/crossbusexplorer-win-x64.zip
        asset_name: crossbusexplorer-win-x64.zip
        asset_content_type: application/zip

    - name: Upload linux snap x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-electron/crossbusexplorer-linux-snap-x64.zip
        asset_name: crossbusexplorer-linux-snap-x64.zip
        asset_content_type: application/zip

    - name: Upload linux appimage x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/crossbusexplorer-electron/crossbusexplorer-linux-appimage-x64.zip
        asset_name: crossbusexplorer-linux-appimage-x64.zip
        asset_content_type: application/zip
